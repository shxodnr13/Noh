import java.net.ServerSocket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Set;

public class Server {

	ArrayList<Guest> list;
	HashMap<String, ArrayList<Guest>> map;
	ArrayList<Guest> arraylist;
	ArrayList<Guest> peoplelist;
	void initNte() throws Exception {
		map = new HashMap<String, ArrayList<Guest>>();
		arraylist = new ArrayList<Guest>();
		list = new ArrayList<Guest>();
		ServerSocket ss = new ServerSocket(8888);
		while(true) {
			Socket s = ss.accept();
			Guest g = new Guest(this, s);
			g.start();
			addGuest(g);
		}
	}
	
	///////////////////////////////////////////////////
	void removeRoom(String rn)
	{
		if(map.get(rn).size()==0)
		{
			map.remove(rn);
		}
	}
	
	void removeGuestRoom(String rn, Guest guest) throws Exception
	{
		map.get(rn).remove(guest);
		map.get(rn);
		broadcastRoom(rn, "out/"+guest.id);
	}
	
	////////////////////////////////////////////////////
	void addGuestRoom(String rn, Guest guest)
	{
		ArrayList<Guest> list2 = map.get(rn);
		list2.add(guest);
		System.out.print("roomname" + rn + ",");
		System.out.println("People Count : " + list2.size());
	}
	
	void addRoom(String roomname, Guest guest)
	{
		ArrayList<Guest> arraylist2 = new ArrayList<Guest>();
		arraylist2.add(guest);
		map.put(roomname, arraylist2);
		System.out.println("Created Room: " + roomname);
		System.out.println("Number of Users: " + arraylist2.size());
		
		
	}
	
	void addGuest(Guest g)
	{
		list.add(g);
		System.out.println("Number of connectors: "+ list.size());
	}
	
	void makeRoomlist() throws Exception {
		Set<String> rommlist = map.keySet();
		StringBuffer buffer = new StringBuffer("roomlist/");
		for(String t : roomlist ) 
		{
			buffer.append(t + "/");
		}
		broadcast(buffer.toString());
		Roomnumber(roomlist); 
	}
	
	void Roomnumber(Set<String> roomlist) throws Exception {
		
		StringBuffer buffer2 = new StringBuffer("roomnum/");
		for(String t : roomlist)
		{
			buffer2.append(map.get(t).size()+"/")
		}
	}
}
